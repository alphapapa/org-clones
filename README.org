* Ideas for orgmode clones


I want to be able to clone an orgmode heading so that it can appear in different places in an outline. When I edit one of these headings, I want the changes to sync to all the other clones. It is a feature of Leo Editor, which I wish I could use, but it’s not in Emacs so it is dead to me. See, e.g., https://leoeditor.com/tutorial-pim.html. 


I have browsed various emacs transclusion efforts. I found them either under or overwhelming. Most of the time, I was not smart enough to make sense of it. Many seem half-complete. I now add a new, less than half complete, idea to the mix. 


Try this:

Goto 

1. Require both .el files
2. Create a blank orgmode file
3. Insert a header. Give it a headline, a code block, or something in its body. 
4. =M-x org-transclude-create-clone=
5. Select the header you just inserted (should popup an interface via org-goto). 
6. Now you have a clone of the first header. Its headline and body should be read-only. 
7. You want to edit a clone, put the cursor on the headline or body. Press enter. Now you can edit it. Press C-c C-c, and those changes will sync to the other clone. C-c C-k will abandon the changes. 


You can clone a heading as many times as you want. If there are multiple clones, it does not matter which one you select as the source; each clone knows about all other clones so there is no “source” heading. 


Quick notes:
* Only the headline (including todo and tags) and the body (i.e., the properties, planning line, and initial drawers) are cloned. This was an arbitrary decision.
* Child nodes are not part of the clone. The clone can be moved within the outline to different locations.
* There are (fixable) problems with the precise location of the read-only text properties and the clone face overlay. For now, it gets the idea across so it serves its purpose.
* While there are questionable design and coding decisions, I think the fundamental design idea is sound, i.e., not relying on modification hooks and having a clone editing mode to abort or commit changes.
* I think this design would work across files, but have not tested. 
** Update: it works, and creating clones across files also works with setting a marker before creating the clone. 
* If this is a good design, there are a lot of questions about how to best accomplish it. Org-ml looks like it might be a useful tool. See https://github.com/ndwarshuis/org-ml. Right now, using org-ml for headlines and org-element for the body. 
* Overlays vs. text properties: orgmode will not allow a 'keymap text property. Therefore, overlays have to be used.
** Unless there is a better way to "lock" the clone. The other choice would be to use the 'point-entered and point-left, which is the next idea to explore.


Ideas or feedback, yea or nay, are welcome. 





